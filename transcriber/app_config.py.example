from pytz import timezone
import os

TIME_ZONE = timezone('America/Chicago')

# 2 possible roles: 'admin' & 'manager'
# admins have access to everything
# managers have access to everything except editing tasks
# clerks are only able to transcribe. anyone without a role is a clerk
ADMIN_USER = {
    'name': 'admin_username',
    'email': 'admin@foo.com',
    'password': 'really-secret',
    'role': 'admin',
}
MANAGER_USER = {
    'name': 'manager_username',
    'email': 'manager@foo.com',
    'password': 'so-secret',
    'role': 'manager',
}
CLERK_USER = {
    'name': 'person',
    'email': 'person@foo.com',
    'password': 'secrets',
    'role': None,
}

DB_USER = ''
DB_PW = ''
DB_HOST = 'localhost'
DB_PORT = '5432'
DB_NAME = 'election_transcriber'

DB_CONN='postgresql+psycopg2://{0}:{1}@{2}:{3}/{4}'\
        .format(DB_USER, DB_PW, DB_HOST, DB_PORT, DB_NAME)

SECRET_KEY = 'super secret key'
UPLOAD_FOLDER = os.path.join(os.path.dirname(__file__), 'uploads')

MAIL_SERVER = 'smtp.example.com'
MAIL_PORT = 465
MAIL_USE_TLS = True
MAIL_USERNAME = 'username'
MAIL_PASSWORD = 'password'

AWS_KEY = ''
AWS_SECRET = ''

SECURITY_PASSWORD_HASH = 'bcrypt'
SECURITY_PASSWORD_SALT = 'really-really-secret'
SECURITY_EMAIL_SENDER = 'app@email.address'
SECURITY_REGISTER_URL = '/register/'
SECURITY_LOGIN_URL = '/login/'
SECURITY_LOGOUT_URL = '/logout/'
SECURITY_RESET_URL = '/reset-password/'
SECURITY_CONFIRM_URL = '/confirm/'
SECURITY_LOGIN_USER_TEMPLATE = 'login.html'
SECURITY_REGISTERABLE = True
SECURITY_CONFIRMABLE = True
SECURITY_RECOVERABLE = True
SECURITY_CONFIRM_SALT = 'also-really-secret'
SECURITY_RESET_SALT = 'also-really-secret'
SECURITY_LOGIN_SALT = 'also-really-secret'
SECURITY_REMEMBER_SALT = 'also-really-really-secret'

DOCUMENTCLOUD_USER = 'foo@bar.com'
DOCUMENTCLOUD_PW = 'baz'
